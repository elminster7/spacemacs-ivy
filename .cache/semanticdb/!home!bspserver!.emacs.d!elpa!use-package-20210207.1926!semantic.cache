;; Object semanticdb-project-database-file-1593780fa788
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1593780fa788"
  :tables
  (list
    (semanticdb-table "semanticdb-table-159379f07e6a"
      :major-mode emacs-lisp-mode
      :tags 
        '( ("bytecomp" include nil nil [1658 1677])
            ("cl-lib" include nil nil [1678 1695])
            ("tabulated-list" include nil nil [1696 1721])
            ("deftheme" code nil nil [1873 1895])
            ("enable-theme" code nil nil [1898 1925])
            ("setq" code nil nil [2061 2131])
            ("if" code nil nil [2133 2393])
            ("regexp-opt" include nil nil [2416 2437])
            ("use-package" customgroup (:user-visible-flag t) nil [2440 2545])
            ("use-package-version" variable
               (:constant-flag t
                :default-value "2.4.1")
                nil [2547 2618])
            ("use-package-keywords" variable (:default-value '(:disabled :load-path :requires :defines :functions :preface :if :when :unless :no-require :catch :after :custom :custom-face :bind :bind* :bind-keymap :bind-keymap* :interpreter :mode :magic :magic-fallback :hook :commands :init :defer :demand :load :config)) nil [2620 3913])
            ("use-package-deferring-keywords" variable (:default-value '(:bind-keymap :bind-keymap* :commands)) nil [3915 4399])
            ("use-package-ignore-unknown-keywords" variable nil nil [4401 4672])
            ("use-package-use-theme" variable (:default-value t) nil [4674 4880])
            ("use-package-verbose" variable nil nil [4882 5443])
            ("use-package-check-before-init" variable nil nil [5445 5660])
            ("use-package-always-defer" variable nil nil [5662 5857])
            ("use-package-always-demand" variable nil nil [5859 6055])
            ("use-package-defaults" variable (:default-value '((:config '(t) t) (:init nil t) (:catch t (lambda (name args) (not use-package-expand-minimally))) (:defer use-package-always-defer (lambda (name args) (and use-package-always-defer (not (plist-member args :defer)) (not (plist-member args :demand))))) (:demand use-package-always-demand (lambda (name args) (and use-package-always-demand (not (plist-member args :defer)) (not (plist-member args :demand))))))) nil [6057 8069])
            ("use-package-merge-key-alist" variable (:default-value '((:if lambda (new old) `(and ,new ,old)) (:after lambda (new old) `(:all ,new ,old)) (:defer lambda (new old) old) (:bind lambda (new old) (append new (list :break) old)))) nil [8071 8942])
            ("use-package-hook-name-suffix" variable (:default-value "-hook") nil [8944 9195])
            ("use-package-minimum-reported-time" variable (:default-value 0.1) nil [9197 9430])
            ("use-package-inject-hooks" variable nil nil [9432 10338])
            ("use-package-expand-minimally" variable nil nil [10340 10950])
            ("use-package-form-regexp-eval" variable (:default-value `(concat ,(eval-when-compile (concat "^\\s-*(" (regexp-opt '("use-package" "require") t) "\\s-+\\(")) (or (bound-and-true-p lisp-mode-symbol-regexp) "\\(?:\\sw\\|\\s_\\|\\\\.\\)+") "\\)")) nil [10952 11464])
            ("use-package-enable-imenu-support" variable nil nil [11466 12181])
            ("use-package-font-lock-keywords" variable
               (:constant-flag t
                :default-value '(("(\\(use-package\\)\\_>[ 	']*\\(\\(?:\\sw\\|\\s_\\)+\\)?" (1 font-lock-keyword-face) (2 font-lock-constant-face nil t))))
                nil [12183 12361])
            ("font-lock-add-keywords" code nil nil [12363 12435])
            ("use-package-compute-statistics" variable nil nil [12437 12811])
            ("use-package-statistics" variable (:default-value (make-hash-table)) nil [12813 12862])
            ("use-package-error" function (:arguments ("msg")) nil [12972 13111])
            ("use-package-concat" function (:arguments ("elems")) nil [13113 13290])
            ("use-package-non-nil-symbolp" function (:arguments ("sym")) nil [13292 13362])
            ("use-package-as-symbol" function (:arguments ("string-or-symbol")) nil [13364 13603])
            ("use-package-as-string" function (:arguments ("string-or-symbol")) nil [13605 13849])
            ("use-package-regex-p" function (:arguments ("re")) nil [13851 13993])
            ("use-package-normalize-regex" function (:arguments ("re")) nil [13995 14249])
            ("use-package-is-pair" function (:arguments ("x" "car-pred" "cdr-pred")) nil [14251 14528])
            ("use-package-as-mode" function (:arguments ("string-or-symbol")) nil [14530 14888])
            ("use-package-load-name" function (:arguments ("name" "noerror")) nil [14890 15212])
            ("use-package-hook-injector" function (:arguments ("name-string" "keyword" "body")) nil [15214 15863])
            ("use-package-with-elapsed-timer" function (:arguments ("text" "body")) nil [15865 16602])
            ("put" code nil nil [16604 16665])
            ("use-package-require" function (:arguments ("name" "no-require" "body")) nil [16667 17211])
            ("use-package-plist-delete" function (:arguments ("plist" "property")) nil [17318 17616])
            ("use-package-plist-delete-first" function (:arguments ("plist" "property")) nil [17618 17985])
            ("use-package-plist-maybe-put" function (:arguments ("plist" "property" "value")) nil [17987 18203])
            ("use-package-plist-cons" function (:arguments ("plist" "property" "value")) nil [18205 18393])
            ("use-package-plist-append" function (:arguments ("plist" "property" "value")) nil [18395 18590])
            ("use-package-split-list" function (:arguments ("pred" "xs")) nil [18592 18919])
            ("use-package-split-list-at-keys" function (:arguments ("key" "lst")) nil [18921 19129])
            ("use-package-keyword-index" function (:arguments ("keyword")) nil [19230 19469])
            ("use-package-normalize-plist" function (:arguments ("name" "input" "plist" "merge-function")) nil [19471 20893])
            ("use-package-unalias-keywords" function (:arguments ("_name" "args")) nil [20895 21175])
            ("use-package-merge-keys" function (:arguments ("key" "new" "old")) nil [21177 21357])
            ("use-package-sort-keywords" function (:arguments ("plist")) nil [21359 21866])
            ("use-package-normalize-keywords" function (:arguments ("name" "args")) nil [21868 26843])
            ("use-package-process-keywords" function (:arguments ("name" "plist" "state")) nil [26845 28052])
            ("put" code nil nil [28054 28118])
            ("use-package-list-insert" function (:arguments ("elem" "xs" "anchor" "after" "test")) nil [28120 29028])
            ("use-package-only-one" function (:arguments ("label" "args" "f")) nil [29140 29471])
            ("put" code nil nil [29473 29529])
            ("use-package-as-one" function (:arguments ("label" "args" "f" "allow-empty")) nil [29531 30017])
            ("put" code nil nil [30019 30073])
            ("use-package-memoize" function (:arguments ("f" "arg")) nil [30075 30560])
            ("use-package-normalize-value" function (:arguments ("_label" "arg")) nil [30562 30880])
            ("use-package-normalize-symbols" function (:arguments ("label" "arg" "recursed")) nil [30882 31271])
            ("use-package-normalize-symlist" function (:arguments ("_name" "keyword" "args")) nil [31273 31417])
            ("use-package-normalize-recursive-symbols" function (:arguments ("label" "arg")) nil [31419 31798])
            ("use-package-normalize-recursive-symlist" function (:arguments ("_name" "keyword" "args")) nil [31800 31964])
            ("use-package-normalize-paths" function (:arguments ("label" "arg" "recursed")) nil [31966 32687])
            ("use-package-normalize-predicate" function (:arguments ("_name" "keyword" "args")) nil [32689 32866])
            ("use-package-normalize-form" function (:arguments ("label" "args")) nil [32868 33372])
            ("use-package-normalize-forms" function (:arguments ("_name" "keyword" "args")) nil [33374 33488])
            ("use-package-normalize-pairs" function (:arguments ("key-pred" "val-pred" "name" "label" "arg" "recursed")) nil [33490 34346])
            ("use-package-recognize-function" function (:arguments ("v" "binding" "additional-pred")) nil [34348 34963])
            ("use-package-normalize-function" function (:arguments ("v")) nil [34965 35485])
            ("use-package-normalize-commands" function (:arguments ("args")) nil [35487 35767])
            ("use-package-normalize-mode" function (:arguments ("name" "keyword" "args")) nil [35769 36126])
            ("use-package-autoloads-mode" function (:arguments ("_name" "_keyword" "args")) nil [36128 36409])
            ("use-package-handle-mode" function (:arguments ("name" "alist" "args" "rest" "state")) nil [36411 36814])
            ("use-package-reset-statistics" function nil nil [36917 37022])
            ("use-package-statistics-status" function (:arguments ("package")) nil [37024 37348])
            ("use-package-statistics-last-event" function (:arguments ("package")) nil [37350 37747])
            ("use-package-statistics-time" function (:arguments ("package")) nil [37749 38088])
            ("use-package-statistics-convert" function (:arguments ("package")) nil [38090 38554])
            ("use-package-report" function (:user-visible-flag t) nil [38556 39304])
            ("define-derived-mode" code nil nil [39306 39690])
            ("use-package-statistics-gather" function (:arguments ("keyword" "name" "after")) nil [39692 40144])
            ("use-package-normalize/:disabled" function (:arguments ("_name" "_keyword" "_arg")) nil [40358 40447])
            ("use-package-handler/:disabled" function (:arguments ("name" "_keyword" "_arg" "rest" "state")) nil [40449 40567])
            ("use-package-normalize-test" function (:arguments ("_name" "keyword" "args")) nil [40598 40739])
            ("defalias" code nil nil [40741 40806])
            ("use-package-handler/:if" function (:arguments ("name" "_keyword" "pred" "rest" "state")) nil [40808 40962])
            ("defalias" code nil nil [40964 41031])
            ("defalias" code nil nil [41033 41095])
            ("defalias" code nil nil [41097 41166])
            ("use-package-handler/:unless" function (:arguments ("name" "_keyword" "pred" "rest" "state")) nil [41168 41328])
            ("defalias" code nil nil [41346 41420])
            ("use-package-handler/:requires" function (:arguments ("name" "_keyword" "requires" "rest" "state")) nil [41422 41776])
            ("use-package-normalize/:load-path" function (:arguments ("_name" "keyword" "args")) nil [41795 41940])
            ("use-package-handler/:load-path" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [41942 42227])
            ("defalias" code nil nil [42247 42325])
            ("use-package-handler/:no-require" function (:arguments ("name" "_keyword" "_arg" "rest" "state")) nil [42327 42447])
            ("defalias" code nil nil [42464 42537])
            ("use-package-handler/:defines" function (:arguments ("name" "_keyword" "_arg" "rest" "state")) nil [42539 42656])
            ("defalias" code nil nil [42675 42750])
            ("use-package-handler/:functions" function (:arguments ("name" "_keyword" "_arg" "rest" "state")) nil [42752 42871])
            ("defalias" code nil nil [42888 42959])
            ("use-package-handler/:preface" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [42961 43386])
            ("use-package--form" variable nil nil [43401 43427])
            ("use-package--hush-function" variable (:default-value nil) nil [43428 43495])
            ("use-package-hush" function (:arguments ("context" "keyword" "body")) nil [43497 43663])
            ("use-package-normalize/:catch" function (:arguments ("_name" "keyword" "args")) nil [43665 43836])
            ("use-package-handler/:catch" function (:arguments ("name" "keyword" "arg" "rest" "state")) nil [43838 45371])
            ("defalias" code nil nil [45392 45466])
            ("defalias" code nil nil [45467 45541])
            ("use-package-handler/:interpreter" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [45543 45686])
            ("defalias" code nil nil [45700 45767])
            ("defalias" code nil nil [45768 45835])
            ("use-package-handler/:mode" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [45837 45966])
            ("defalias" code nil nil [45981 46049])
            ("defalias" code nil nil [46050 46118])
            ("use-package-handler/:magic" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [46120 46251])
            ("defalias" code nil nil [46275 46352])
            ("defalias" code nil nil [46353 46430])
            ("use-package-handler/:magic-fallback" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [46432 46581])
            ("use-package-normalize/:hook" function (:arguments ("name" "keyword" "args")) nil [46595 47481])
            ("defalias" code nil nil [47483 47550])
            ("use-package-handler/:hook" function (:arguments ("name" "_keyword" "args" "rest" "state")) nil [47552 48240])
            ("defalias" code nil nil [48258 48332])
            ("use-package-handler/:commands" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [48334 49082])
            ("defalias" code nil nil [49097 49170])
            ("use-package-handler/:defer" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [49172 49688])
            ("use-package-normalize/:after" function (:arguments ("name" "keyword" "args")) nil [49703 49880])
            ("use-package-after-count-uses" function (:arguments ("features*")) nil [49882 50578])
            ("use-package-require-after-load" function (:arguments ("features*" "body")) nil [50580 51354])
            ("use-package-handler/:after" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [51356 51786])
            ("defalias" code nil nil [51802 51876])
            ("use-package-handler/:demand" function (:arguments ("name" "_keyword" "_arg" "rest" "state")) nil [51878 51994])
            ("use-package-normalize/:custom" function (:arguments ("_name" "keyword" "args")) nil [52010 52435])
            ("use-package-handler/:custom" function (:arguments ("name" "_keyword" "args" "rest" "state")) nil [52437 53941])
            ("use-package-normalize/:custom-face" function (:arguments ("name-symbol" "_keyword" "arg")) nil [53962 54557])
            ("use-package-handler/:custom-face" function (:arguments ("name" "_keyword" "args" "rest" "state")) nil [54559 54826])
            ("defalias" code nil nil [54840 54908])
            ("use-package-handler/:init" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [54910 55642])
            ("use-package-normalize/:load" function (:arguments ("name" "keyword" "args")) nil [55656 55832])
            ("use-package-handler/:load" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [55834 56071])
            ("defalias" code nil nil [56087 56157])
            ("use-package-handler/:config" function (:arguments ("name" "_keyword" "arg" "rest" "state")) nil [56159 57014])
            ("use-package-core" function (:arguments ("name" "args")) nil [57121 58060])
            ("use-package" function (:arguments ("name" "args")) nil [58077 62157])
            ("put" code nil nil [62159 62206])
            ("use-package-core" package nil nil [62208 62235]))          
      :file "use-package-core.el"
      :pointmax 62325
      :fsize 62324
      :lastmodtime '(24807 41512 992473 974000)
      :unmatched-syntax '((close-paren 2437 . 2438) (symbol 2396 . 2413) (open-paren 2395 . 2396) (close-paren 1895 . 1896) (symbol 1724 . 1740) (open-paren 1723 . 1724))))
  :file "!home!bspserver!.emacs.d!elpa!use-package-20210207.1926!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
